/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiNetbean;

import java.awt.CardLayout;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.swing.ButtonGroup;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.data.category.DefaultCategoryDataset;

import Storage.AccountList;
import Storage.Statistics;
import java.util.Enumeration;
import javax.swing.AbstractButton;

import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.ui.TextAnchor;

/**
 *
 * @author theng
 */
public class guiStatisticalChart extends javax.swing.JFrame {

    /**
     * Creates new form guiStatisticalChart
     */
    public guiStatisticalChart() {
        statisticsBy = new ButtonGroup();
        chartStyle = new ButtonGroup();

        Calendar cal = Calendar.getInstance();
        cal.setTime(new Date());
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
        cal.set(Calendar.MILLISECOND, 0);
        now = cal.getTime();

        initComponents();
        createDataset();
        initBarChart(pnChart);
    }

    private void initBarChart(javax.swing.JPanel chartPanel) {
        // Create barChart
        barChart = ChartFactory.createBarChart("Statistical Chart", "Time", "Number of Register", dataset,
                PlotOrientation.VERTICAL, false, true, true);

        CategoryItemRenderer renderer = ((CategoryPlot) barChart.getPlot()).getRenderer();
        renderer.setDefaultItemLabelGenerator(new StandardCategoryItemLabelGenerator());
        renderer.setDefaultItemLabelsVisible(true);
        ItemLabelPosition position = new ItemLabelPosition(ItemLabelAnchor.OUTSIDE12, TextAnchor.TOP_CENTER);
        renderer.setDefaultPositiveItemLabelPosition(position);

        ChartPanel panel = new ChartPanel(barChart);
        panel.setPreferredSize(new Dimension(chartPanel.getWidth(), chartPanel.getHeight()));

        chartPanel.removeAll();
        chartPanel.setLayout(new CardLayout());
        chartPanel.add(panel);
        chartPanel.validate();
        chartPanel.repaint();
    }

    private void initLineChart(javax.swing.JPanel chartPanel) {
        // Create lineChart
        lineChart = ChartFactory.createLineChart("Statistical Chart", // Chart title
                "Time", // X-Axis Label
                "Number of Register", // Y-Axis Label
                dataset, PlotOrientation.VERTICAL, false, true, true);

        CategoryPlot plot = (CategoryPlot) lineChart.getPlot();

        LineAndShapeRenderer renderer = (LineAndShapeRenderer) plot.getRenderer();
        renderer.setDefaultShapesVisible(true);
        DecimalFormat decimalformat1 = new DecimalFormat("##");
        renderer.setDefaultItemLabelGenerator(new StandardCategoryItemLabelGenerator("{2}", decimalformat1));
        renderer.setDefaultItemLabelsVisible(true);
        renderer.setDefaultSeriesVisible(true);

        ChartPanel panel = new ChartPanel(lineChart);
        panel.setPreferredSize(new Dimension(840, 450));
        panel.setPreferredSize(new Dimension(chartPanel.getWidth(), chartPanel.getHeight()));

        chartPanel.removeAll();
        chartPanel.setLayout(new CardLayout());
        chartPanel.add(panel);
        chartPanel.validate();
        chartPanel.repaint();
    }

    private void createDataset() {
        AccountList list = new AccountList();
        listItem = list.getStatitical();
        dataset = new DefaultCategoryDataset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnRoot = new javax.swing.JPanel();
        pnOption = new javax.swing.JPanel();
        statisticsByLabel1 = new javax.swing.JLabel();
        allTimeButton = new javax.swing.JRadioButton();
        dayButton = new javax.swing.JRadioButton();
        monthButton = new javax.swing.JRadioButton();
        yearButton = new javax.swing.JRadioButton();
        pnYear = new javax.swing.JPanel();
        fromLabel1 = new javax.swing.JLabel();
        toLabel1 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jYearChooser2 = new com.toedter.calendar.JYearChooser();
        pnDay = new javax.swing.JPanel();
        fromLabel = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        toLabel = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        pnMonth = new javax.swing.JPanel();
        fromLabel2 = new javax.swing.JLabel();
        toLabel2 = new javax.swing.JLabel();
        jYearChooser3 = new com.toedter.calendar.JYearChooser();
        jYearChooser4 = new com.toedter.calendar.JYearChooser();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jMonthChooser2 = new com.toedter.calendar.JMonthChooser();
        chartStyleLabel = new javax.swing.JLabel();
        barChartButton = new javax.swing.JRadioButton();
        lineChartButton = new javax.swing.JRadioButton();
        showButton = new javax.swing.JButton();
        pnChart = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnOption.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        statisticsByLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        statisticsByLabel1.setText("Statistics by:");
        statisticsByLabel1.setToolTipText("");
        pnOption.add(statisticsByLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        statisticsBy.add(allTimeButton);
        allTimeButton.setSelected(true);
        allTimeButton.setText("All time");
        allTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allTimeButtonActionPerformed(evt);
            }
        });
        pnOption.add(allTimeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        statisticsBy.add(dayButton);
        dayButton.setText("Day");
        dayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayButtonActionPerformed(evt);
            }
        });
        pnOption.add(dayButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        statisticsBy.add(dayButton);

        statisticsBy.add(monthButton);
        monthButton.setText("Month");
        monthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthButtonActionPerformed(evt);
            }
        });
        pnOption.add(monthButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));
        statisticsBy.add(dayButton);

        statisticsBy.add(yearButton);
        yearButton.setText("Year");
        yearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearButtonActionPerformed(evt);
            }
        });
        pnOption.add(yearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        statisticsBy.add(dayButton);

        pnYear.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fromLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fromLabel1.setText("From");
        fromLabel1.setToolTipText("");
        pnYear.add(fromLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        toLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        toLabel1.setText("to");
        toLabel1.setToolTipText("");
        pnYear.add(toLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        pnYear.add(jYearChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, -1));
        pnYear.add(jYearChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 60, -1));

        pnOption.add(pnYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 140, 120));
        pnYear.setVisible(false);

        pnDay.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fromLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fromLabel.setText("From");
        fromLabel.setToolTipText("");
        pnDay.add(fromLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jDateChooser.setDate(now);
        pnDay.add(jDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, -1));

        toLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        toLabel.setText("to");
        toLabel.setToolTipText("");
        pnDay.add(toLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jDateChooser1.setDate(now);
        pnDay.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 110, -1));

        pnOption.add(pnDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 140, 120));
        pnDay.setVisible(false);

        pnMonth.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fromLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fromLabel2.setText("From");
        fromLabel2.setToolTipText("");
        pnMonth.add(fromLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        toLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        toLabel2.setText("to");
        toLabel2.setToolTipText("");
        pnMonth.add(toLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));
        pnMonth.add(jYearChooser3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, -1));
        pnMonth.add(jYearChooser4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, -1));
        pnMonth.add(jMonthChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        pnMonth.add(jMonthChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        pnOption.add(pnMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 140, 170));
        pnMonth.setVisible(false);

        chartStyleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chartStyleLabel.setText("Chart style:");
        chartStyleLabel.setToolTipText("");
        pnOption.add(chartStyleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        barChartButton.setSelected(true);
        barChartButton.setText("Bar chart");
        barChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barChartButtonActionPerformed(evt);
            }
        });
        pnOption.add(barChartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));
        chartStyle.add(barChartButton);

        lineChartButton.setText("Line chart");
        lineChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineChartButtonActionPerformed(evt);
            }
        });
        pnOption.add(lineChartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));
        statisticsBy.add(dayButton);
        chartStyle.add(lineChartButton);

        showButton.setText("Show");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });
        pnOption.add(showButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        javax.swing.GroupLayout pnChartLayout = new javax.swing.GroupLayout(pnChart);
        pnChart.setLayout(pnChartLayout);
        pnChartLayout.setHorizontalGroup(
            pnChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
        );
        pnChartLayout.setVerticalGroup(
            pnChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnRootLayout = new javax.swing.GroupLayout(pnRoot);
        pnRoot.setLayout(pnRootLayout);
        pnRootLayout.setHorizontalGroup(
            pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRootLayout.createSequentialGroup()
                .addComponent(pnOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnRootLayout.setVerticalGroup(
            pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnOption, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
            .addComponent(pnChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void yearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearButtonActionPerformed
        pnDay.setVisible(false);
        pnMonth.setVisible(false);
        pnYear.setVisible(true);
    }//GEN-LAST:event_yearButtonActionPerformed

    private void monthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthButtonActionPerformed
        pnDay.setVisible(false);
        pnMonth.setVisible(true);
        pnYear.setVisible(false);
    }//GEN-LAST:event_monthButtonActionPerformed

    private void allTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_allTimeButtonActionPerformed
        pnDay.setVisible(false);
        pnMonth.setVisible(false);
        pnYear.setVisible(false);
    }// GEN-LAST:event_allTimeButtonActionPerformed

    private void dayButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_betweenButtonActionPerformed
        pnDay.setVisible(true);
        pnMonth.setVisible(false);
        pnYear.setVisible(false);
    }// GEN-LAST:event_betweenButtonActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_showButtonActionPerformed
        String select = getSelectedStatisticsBy(statisticsBy);
        switch (select) {
            case "All time":
                setAllTime();
                break;
            case "Between":
                setBetweenTime();
                break;
        }
    }// GEN-LAST:event_showButtonActionPerformed

    public String getSelectedStatisticsBy(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    private void lineChartButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_lineChartButtonActionPerformed
        initLineChart(pnChart);
    }// GEN-LAST:event_lineChartButtonActionPerformed

    private void barChartButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_barChartButtonActionPerformed
        initBarChart(pnChart);
    }// GEN-LAST:event_barChartButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guiStatisticalChart.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guiStatisticalChart.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guiStatisticalChart.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guiStatisticalChart.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new guiStatisticalChart().setVisible(true);
                guiStatisticalChart example = new guiStatisticalChart();
//                example.setAlwaysOnTop(true);
                example.setVisible(true);
            }
        });
    }

    private JFreeChart barChart;
    private JFreeChart lineChart;
    private final ButtonGroup statisticsBy;
    private final ButtonGroup chartStyle;
    DefaultCategoryDataset dataset;
    List<Statistics> listItem;
    private final Date now;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allTimeButton;
    private javax.swing.JRadioButton barChartButton;
    private javax.swing.JLabel chartStyleLabel;
    private javax.swing.JRadioButton dayButton;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel fromLabel1;
    private javax.swing.JLabel fromLabel2;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private com.toedter.calendar.JMonthChooser jMonthChooser2;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private com.toedter.calendar.JYearChooser jYearChooser2;
    private com.toedter.calendar.JYearChooser jYearChooser3;
    private com.toedter.calendar.JYearChooser jYearChooser4;
    private javax.swing.JRadioButton lineChartButton;
    private javax.swing.JRadioButton monthButton;
    private javax.swing.JPanel pnChart;
    private javax.swing.JPanel pnDay;
    private javax.swing.JPanel pnMonth;
    private javax.swing.JPanel pnOption;
    private javax.swing.JPanel pnRoot;
    private javax.swing.JPanel pnYear;
    private javax.swing.JButton showButton;
    private javax.swing.JLabel statisticsByLabel1;
    private javax.swing.JLabel toLabel;
    private javax.swing.JLabel toLabel1;
    private javax.swing.JLabel toLabel2;
    private javax.swing.JRadioButton yearButton;
    // End of variables declaration//GEN-END:variables

    private void setAllTime() {
        for (Statistics i : listItem) {
            dataset.addValue(i.getCount(), "", i.getCreateDate());
        }
    }

    private void setBetweenTime() {
        dataset.clear();
        for (Statistics i : listItem) {
            Date t = i.getCreateDate();
            long time = t.getTime();
            long time1 = getTime1(jDateChooser).getTime();
            long time2 = getTime2(jDateChooser1).getTime();
            if (time >= time1 && time <= time2) {
                dataset.addValue(i.getCount(), "", t);
            }
        }
    }

    private Date getTime1(com.toedter.calendar.JDateChooser jDateChooser) {
        Date value;
        Calendar cal = Calendar.getInstance();
        Date temp = jDateChooser.getDate();
        if (temp == null) {
            return null;
        }
        cal.setTime(temp);
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
        cal.set(Calendar.MILLISECOND, 0);
        value = cal.getTime();
        return value;
    }

    private Date getTime2(com.toedter.calendar.JDateChooser jDateChooser) {
        Date value;
        Calendar cal = Calendar.getInstance();
        Date temp = jDateChooser.getDate();
        if (temp == null) {
            return null;
        }
        cal.setTime(temp);
        cal.set(Calendar.HOUR_OF_DAY, 24);
        cal.set(Calendar.MINUTE, 59);
        cal.set(Calendar.SECOND, 59);
        cal.set(Calendar.MILLISECOND, 99);
        value = cal.getTime();
        return value;
    }
}
